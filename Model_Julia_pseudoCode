
## Pseudo (PSEUDO) code for code in Model_Julia_Code

# The lotka volterra model is the heart of the code and it gets defined in every section of the code appropriately
define (in all cores) function LV_model(params)
            Eq1
            Eq2
            Eq3
        end

set parameter values as array p=[val 1, val 2, ...., val t]

1) Initialize all arrays (time, temperature, species abundance arrays, etc)
    -Temperature is initialized as an array from 25 to 30 and 12 possible values (see methods)
    -Temperature sensitivities are initialized as an array from 0 to 0.6 and 100 values
2) Initialize important values like time span, initial conditions, burnin time (maximum time the model is allowed to run), etc


## Actual model solutions across temperature and temperature sensitivity parameters as described in main text
3) for i in temp_array (initialized in 1))
        for j in Temp_sensitivity_array (also initialized in 1))

            -Solves LV_model function (initialized above)

            -Stores all numerical solutions and calculates geometric means in case of strong oscillatory behavior (none in ranged of parameters ultilized)

        end
        print i to keep track of how long this is going to take
    end

4) Uses stored solutions to calculate proportion of basal species, trophic level and proportional contributions (interaction strengths), as described in main text

5) Passess data to R (needs RCall package) and plots in R using normal R syntax but from within Julia


The code above is slightly modified in Scenario III of the main text as now the activation energies of two parameters of two species change simultaneously.
